<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.DynamicSQLMapper">
    <!-- List<Emp> getEmpyByCondition(Emp emp); -->
    <select id="getEmpyByConditionOne" resultType="Emp">
        select * from t_emp where 1=1
        <if test="empName != null and empName != ''">
            and emp_name = #{empName}
        </if>
        <if test="age !=null and age!=''">
            and age = #{age}
        </if>
        <if test="gender !=null and gender!=''">
            and gender =#{gender}
        </if>
    </select>


    <!-- 动态SQL
       1.if，通过test属性中的表达式判断标签中的内容是否有效（是否会拼接到sql中)
       2.where
       a.若where标签中有条件成立，会自动生成where关键字
       b.会自动将where标签中内容前多余的and去掉 ，但是其中内容后多余的and无法去掉
       c.若where标签中没有任何一个条件城里，则where没有任何功能
     -->
    <select id="getEmpyByConditionTwo" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age !=null and age!=''">
                and age = #{age}
            </if>
            <if test="gender !=null and gender!=''">
                and gender =#{gender}
            </if>
        </where>
    </select>

    <!--3. trim标签
        prefix,suffic:在标签中内容前面或者后面去添加指定内容
        prefixOverrides,suffixOverrides:在标签中内容前面或者后面去掉指定内容
     -->
    <select id="getEmpyByCondition" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age !=null and age!=''">
                age = #{age} and
            </if>
            <if test="gender !=null and gender!=''">
                gender =#{gender}
            </if>
        </trim>
    </select>

    <!-- 4.choose ,when,otherwise -->
    <!-- List<Emp> getEmpyByChoose(Emp emp); -->
    <!-- 相当于java中的if...else if...else  else <when>最少一个,otherwise最多一个 -->
    <select id="getEmpyByChoose" resultType="Emp">
        select <include refid="empColumns"></include> from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age  != null and age !=''">
                    age = #{age}
                </when>
                <when test="gender != null and gender !=''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>

    <!-- 5.foreach   -->
    <!--  void insetMoreEmp(List<Emp> emps); -->
    <!-- collection:设置要循环的数组或集合
         item:一个一个字符串表示数组或集合中的每一个数据
         sparator:设置每次循环的数据之间的分隔符
         open；循环的所有内容以什么开始
         close:循环的所有内容以什么结束
    -->
    <insert id="insetMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <!-- 通过数组传参批量删除员工信息 -->
    <!-- void deleteMoreEmp(@Param("empIds") Integer[] empIds); -->
    <!-- 设置open和close可去掉 in()的左右括号 -->
    <delete id="deleteMoreEmp2">
        delete from t_emp where emp_id in
        <foreach collection="empIds" item="empId" separator="," open="(" close=")">
        #{empId}
    </foreach>
    </delete>

    <delete id="deleteMoreEmp">
        delete from t_emp where
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>

    <!-- 6.sql片段
      可记录一段sql,在需要的地方使用include标签进行引用
      -->
    <select id="">
        select <include refid="empColumns"></include> from t_emp
    </select>
    <sql id="empColumns">
        emp_id,emp_name,age,gender,dept_id
    </sql>


</mapper>

