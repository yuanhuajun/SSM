<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="studentOne" class="com.pojo.Student">
    </bean>

    <bean id="studentTwo" class="com.pojo.Student">
        <!-- 通过成员变量的set进行赋值
             name：需要赋值的属性名（和set方法有关）
             value：设置为属性所赋的值-->
        <property name="sid" value="1001"></property>
        <property name="sname" value="张三"></property>
        <property name="gender" value="男"></property>
    </bean>

    <bean id="studentThree" class="com.pojo.Student">
        <constructor-arg value="1002"></constructor-arg>
        <constructor-arg value="李四"></constructor-arg>
        <constructor-arg value="女"></constructor-arg>
        <!-- name可直接指定类的属性 -->
        <constructor-arg value="22" name="age"></constructor-arg>
    </bean>


    <bean id="studentFour" class="com.pojo.Student">
        <property name="sid" value="1003"></property>
        <property name="sname" value="&lt;王五&gt;"></property>
        <property name="gender">
            <!-- 为属性赋值为null -->
            <null></null>
        </property>
    </bean>

    <!-- 为类属性赋值 -->
    <bean id="studentFive" class="com.pojo.Student">
        <property name="sid" value="1004"></property>
        <property name="sname" value="赵六"></property>
        <property name="gender" value="男"></property>
        <property name="age" value="24"></property>
        <!-- 1. 引用IOC容器中的某个bean的id，为类属性赋值 -->
        <!-- <property name="clazz" ref="clazzOne"></property> -->
        <!-- 2. 通过级联为类属性赋值，要保证提前为clazz属性赋值或者实例化，然后再对这个对象的属性进行修改，否则会报错Value of nested property 'clazz' is null -->
        <!-- <property name="clazz.cname" value="远大前程"></property> -->
        <!-- <property name="clazz.cid" value="1005"></property> -->
        <!-- 3. 内部bean -->
        <property name="clazz">
            <bean id="clazzInner" class="com.pojo.Clazz">
                <property name="cid" value="22222"></property>
                <property name="cname" value="前程远大班"></property>
            </bean>
        </property>
        <property name="hobby">
            <!-- 数组 -->
            <array>
                <value>唱</value>
                <value>跳</value>
                <value>rapper</value>
            </array>
        </property>
        <!-- map，通过map，entry标签或者ref一个util:map -->
        <property name="teacherMap" ref="teacherMap">
            <!-- map集合类型 一个entry表示一个键值对 -->
            <!-- <map> -->
            <!--     <entry key="10086" value-ref="teacherOne"></entry> -->
            <!--     <entry key="10010" value-ref="teacherTwo"></entry> -->
            <!-- </map> -->
        </property>
    </bean>

    <bean id="teacherOne" class="com.pojo.Teacher">
        <property name="tid" value="10086"></property>
        <property name="tname" value="大宝"></property>
    </bean>
    <bean id="teacherTwo" class="com.pojo.Teacher">
        <property name="tid" value="10010"></property>
        <property name="tname" value="小宝"></property>
    </bean>


    <bean id="clazzOne" class="com.pojo.Clazz">
        <property name="cid" value="11111"></property>
        <property name="cname" value="A班"></property>
        <!-- 为list集合类型属性赋值，实现一对多
           1.list标签
           2.ref一个集合类型的bean（需要utl:list约束）
         -->
        <property name="students" ref="studentList">
            <!-- <list> -->
            <!--     <ref bean="studentOne"></ref> -->
            <!--     <ref bean="studentTwo"></ref> -->
            <!--     <ref bean="studentThree"></ref> -->
            <!-- </list>  -->
        </property>
    </bean>

    <!-- 配置一个集合类型的bean 需要使用util约束 -->
    <util:list id="studentList">
        <ref bean="studentOne"></ref>
        <ref bean="studentTwo"></ref>
        <ref bean="studentThree"></ref>
    </util:list>

    <util:map id="teacherMap">
        <entry key="10086" value-ref="teacherOne"></entry>
        <entry key="10010" value-ref="teacherTwo"></entry>
    </util:map>

    <!-- p命名空间 通过bean标签的属性赋值 -->
    <bean id="studentSix" class="com.pojo.Student"
          p:sid="1005" p:sname="小明" p:teacherMap-ref="teacherMap" p:clazz-ref="clazzOne"></bean>

</beans>